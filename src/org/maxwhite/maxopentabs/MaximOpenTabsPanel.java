/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.maxwhite.maxopentabs;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.text.DefaultFormatter;
import org.openide.util.NbPreferences;

final class MaximOpenTabsPanel extends javax.swing.JPanel {
    private final MaximOpenTabsOptionsPanelController controller;
    private final int SPINNER_START_VALUE                = 1;
    private final int SPINNER_END_VALUE                  = 50;
    private final int SPINNER_STEP                       = 1;
    public static int MAX_OPEN_TABS_NUMBER_DEFAULT       = 8;
    public static final String MAX_OPEN_TABS_STORE_KEY   = "MAX_OPEN_TABS_STORE_KEY";
    
    MaximOpenTabsPanel(MaximOpenTabsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
        SpinnerModel model = new SpinnerNumberModel(1,SPINNER_START_VALUE,SPINNER_END_VALUE,SPINNER_STEP);
        jSpinner1.setModel(model);
        controller.changed();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(MaximOpenTabsPanel.class, "MaximOpenTabsPanel.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(308, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(MaximOpenTabsPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(MaximOpenTabsPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
         JComponent comp = jSpinner1.getEditor();
         JFormattedTextField field = (JFormattedTextField) comp.getComponent(0);
         DefaultFormatter formatter = (DefaultFormatter) field.getFormatter();
         formatter.setCommitsOnValidEdit(true);
         
         jSpinner1.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent ce) {
               controller.changed();
            }
         });
        
        int currentValue = NbPreferences.forModule(MaximOpenTabsPanel.class).getInt(MAX_OPEN_TABS_STORE_KEY, MAX_OPEN_TABS_NUMBER_DEFAULT);
        SpinnerModel model = new SpinnerNumberModel(currentValue,SPINNER_START_VALUE,SPINNER_END_VALUE,SPINNER_STEP);
        jSpinner1.setModel(model);
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(MaximOpenTabsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(MaximOpenTabsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        storeModuleSettings();
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    
    void storeModuleSettings() {
        NbPreferences.forModule(MaximOpenTabsPanel.class).putInt(MAX_OPEN_TABS_STORE_KEY,  (Integer)jSpinner1.getValue());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
